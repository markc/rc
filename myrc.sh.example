#!/usr/bin/env bash
# =============================================================================
# PERSONAL SHELL CONFIGURATION TEMPLATE
# =============================================================================
#
# This is a template for your personal shell configuration.
# To use this file:
#   1. Copy it to create your local configuration:
#      cp myrc.sh.example myrc.sh
#   2. Edit myrc.sh with your personal settings
#   3. Your myrc.sh will be automatically loaded by shrc.sh
#   4. The myrc.sh file is gitignored, so your personal settings stay local
#
# This file is sourced at the END of shrc.sh, so you can:
#   - Override any existing aliases or functions
#   - Add your own custom aliases and functions
#   - Set personal environment variables
#   - Configure shell prompt colors
# =============================================================================

# -----------------------------------------------------------------------------
# SHELL PROMPT CUSTOMIZATION
# -----------------------------------------------------------------------------
# Set your preferred prompt color (31=red, 32=green, 33=yellow, 34=blue, 
# 35=magenta, 36=cyan, 37=white)
COLOR=34

# Set a custom prompt label (defaults to hostname)
#LABEL="myserver"

# -----------------------------------------------------------------------------
# PATH ADDITIONS
# -----------------------------------------------------------------------------
# Add personal directories to PATH
#export PATH=~/.local/bin:$PATH
#export PATH=~/.ns/bin:$PATH

# -----------------------------------------------------------------------------
# ENVIRONMENT VARIABLES
# -----------------------------------------------------------------------------
# Set your preferred editor
#export EDITOR=nano
#export VISUAL=nano

# API tokens and credentials (BE CAREFUL - this file should stay local!)
#export CF_API_TOKEN=your_token_here
#export GITHUB_TOKEN=your_token_here

# Application-specific settings
#export MOZ_ENABLE_WAYLAND=1
#export GTK_USE_PORTAL=1

# -----------------------------------------------------------------------------
# PERSONAL ALIASES
# -----------------------------------------------------------------------------
# Quick server connections
#alias myserver='ssh user@myserver.com'
#alias dev='ssh dev.example.com'
#alias prod='ssh prod.example.com'

# Git shortcuts
#alias g='git status'
#alias gc='git commit -m'
#alias gp='git pull && git push'

# Development shortcuts
#alias phpdev='php -S localhost:8000 -t public'
#alias nrd='npm run dev'
#alias nrb='npm run build'
#alias a='php artisan'
#alias c='composer'

# System shortcuts
#alias ll='ls -la'
#alias ..='cd ..'
#alias ...='cd ../..'

# -----------------------------------------------------------------------------
# PERSONAL FUNCTIONS
# -----------------------------------------------------------------------------
# Example: Memory usage summary for a process
#ramsum() {
#    ram | grep "$1" | grep -v grep | \
#    awk '{print $0} {sum+=$1} END{printf "=========\n%.3f GB\n", sum/1048576}'
#}

# Example: Quick backup function
#backup() {
#    local src="${1:-.}"
#    local dst="${2:-$HOME/backups/$(basename "$src")-$(date +%Y%m%d-%H%M%S).tar.gz}"
#    tar -czf "$dst" "$src" && echo "Backed up to: $dst"
#}

# Example: Extract any archive
#extract() {
#    if [ -f "$1" ]; then
#        case "$1" in
#            *.tar.bz2) tar xjf "$1" ;;
#            *.tar.gz)  tar xzf "$1" ;;
#            *.tar.xz)  tar xJf "$1" ;;
#            *.bz2)     bunzip2 "$1" ;;
#            *.gz)      gunzip "$1" ;;
#            *.tar)     tar xf "$1" ;;
#            *.tbz2)    tar xjf "$1" ;;
#            *.tgz)     tar xzf "$1" ;;
#            *.zip)     unzip "$1" ;;
#            *.Z)       uncompress "$1" ;;
#            *)         echo "'$1' cannot be extracted" ;;
#        esac
#    else
#        echo "'$1' is not a valid file"
#    fi
#}

# -----------------------------------------------------------------------------
# CONDITIONAL CONFIGURATIONS
# -----------------------------------------------------------------------------
# Load work-specific configs on work machines
#if [[ $(hostname) == "work-laptop" ]]; then
#    source ~/.sh/work-config.sh
#fi

# Load local machine-specific configs if they exist
#[[ -f ~/.sh/local.sh ]] && source ~/.sh/local.sh

# -----------------------------------------------------------------------------
# NOTES
# -----------------------------------------------------------------------------
# Remember:
# - This file (myrc.sh) is NOT tracked by git after you create it
# - Keep sensitive information (passwords, tokens) in this file
# - Use environment variables for configuration that changes between machines
# - Test your functions before relying on them in production
# - Document complex functions for future reference